import React, { Component } from 'react';
import styled from 'styled-components';
import Autocomplete from 'react-google-autocomplete';
import DatePicker from 'react-datepicker';
import 'react-datepicker/dist/react-datepicker.css';

const darkGreen = "#24282b";
// const green = "#4d6059";
const lightGreen = "#7f8d89";

const Wrapper = styled.div`
`

const Table = styled.table`
text-align: left;
width: 100%;
margins: 0 0px;
padding: 0 20px;
`

const Column1 = styled.td`
width: 30%
`

const Column2 = styled.td`
`

const Rows = styled.tr`
margins: 0;
`

const Header = styled.div`
display: flex;
align-items: center;
padding: 15px;
`

const NewProject = styled.button`
color: white;
font-size: .8em;
margin: 1em;
width: 200px;
height: 20px;
background-color: ${lightGreen};
padding: 0.25em 1em;
border: none;
border-radius: 20px;



&:hover{
    color: ${darkGreen};
    background-color: white;
    -webkit-filter: drop-shadow(0px 0px 12px rgba(0, 231, 255, 0.8));
    -webkit-transition: 0.3s;
}

&:active {
    color: white;
    background-color: ${darkGreen};
    }
`


class CreateProject extends Component {
    constructor() {
        super();
        this.state = {
        }

    }

    handleStartChange = (date) => {
        this.setState({
            startDate: date
        });
    }

    handleEndChange = (date) => {
        this.setState({
            endDate: date
        });
    }

    handleProjectName = (name) => {
        this.setState({
            projectName: name
        })
    }

    handleProjectDescription = (description) => {
        this.setState({
            projectDescription: description
        })
    }

    handleAddress = (address, lat, lng) => {
        this.props.handleNewAddress(lat, lng)
        this.setState({
            address: address,
            geoLocation: {
                lat: lat,
                lng: lng
            }
        })
    }

    _handleCreateNewProject = (event) => {
        event.preventDefault();


    }

    render() {
        return (
            <Wrapper>
                <Header>
                    <img src="https://firebasestorage.googleapis.com/v0/b/decodemtl-nsu.appspot.com/o/ConstructionWorker-01.png?alt=media&token=1c0b1450-e904-445f-bfb9-65f1b5fca074" alt="Create New Project" />
                    <h2>Create New Project</h2>
                </Header>
                <form>
                    <Table>
                        <tbody>
                            <Rows>
                                <Column1>
                                    <p>Project Number:</p>
                                </Column1>
                                <Column2>
                                    <p>Autogenerated</p>
                                </Column2>
                            </Rows>
                            <Rows>
                                <Column2>
                                    <p>Project Name:</p>
                                </Column2>
                                <Column2>
                                    <input ref={r => this.projectName = r} />
                                </Column2>
                            </Rows>
                            <Rows>
                                <Column2>
                                    <p>Project Description:</p>
                                </Column2>
                                <Column2>
                                    <input ref={r => this.projectDescription = r} />
                                </Column2>
                            </Rows>
                            <Rows>
                                <Column2>
                                    <p>Address:</p>
                                </Column2>
                                <Column2>
                                    <Autocomplete
                                        style={{ width: '100%' }}
                                        onPlaceSelected={(place) => {
                                            this.handleAddress(place.address_components.formatted_address, place.geometry.location.lat(), place.geometry.location.lng())
                                        }}
                                        types={[]}
                                        componentRestrictions={{ country: "ca" }}
                                        ref={r => this.address = r}
                                    />
                                </Column2>
                            </Rows>
                            <Rows>
                                <Column2>
                                    <p>Start Date:</p>
                                </Column2>
                                <Column2>
                                    <DatePicker
                                        selected={this.state.startDate}
                                        onChange={this.handleStartChange}
                                        ref={r => this.startDate = r}
                                    />
                                </Column2>
                            </Rows>
                            <Rows>
                                <Column2>
                                    <p>End Date:</p>
                                </Column2>
                                <Column2>
                                    <DatePicker
                                        selected={this.state.endDate}
                                        onChange={this.handleEndChange}
                                        ref={r => this.endDate = r}
                                    />
                                </Column2>
                            </Rows>
                        </tbody>
                    </Table>

                    <NewProject onClick={this._handleCreateNewProject}>
                        CREATE
                    </NewProject>

                </form>
            </Wrapper>
        )
    }
}

export default CreateProject;